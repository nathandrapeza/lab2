1. 
	Q: How to specify a TCP socket in python? In order:
	- Import socket library.
	- create socket object by: socket_name = create_tcp_socket() function
	- grab remote ip using get_remote_ip(host), where host = hostname
	- connect to the remote ip using the socket connect method on the socket object (socket_name.connect())

2. According to the documentation (from https://docs.python.org/3/library/socket.html), a server must perform sequences/functions socket(), bind(), listen(), and accept(), while a client 

3. When using the setsockopt method on our socket object, we use SO_REUSEADDR as a parameter to "immediately reuse previous sockets which were bound on the same address and remained in TIME_WAIT state" (https://docs.python.org/3/library/socket.html#socket.socket).

4. We are given address information (aside from conn, which is a socket object) after using a socket to accept an incoming connection. This address is bound to the object attemtping to make a connection to the socket. For example, running the test echoing example on echo_server.py, it gave me the information ('127.0.0.1', 58393), where the first number is an address, and I'm not sure what the 2nd number is.

5. "The return value is a bytes object representing the data received" (according to the documentation). The recv method on the connection (new socket) object pretty much just takes in the data that was sent to it as a bytes object.

